import{a as b,c as D,d as l,e as _,f as p,g as v,i as L,j as g,k as O,l as I}from"./chunk-EDYTMDV7.js";import{G as U}from"./chunk-BRULYD2Q.js";import{Eb as u,a as E,c as C,e as c,i as y,w as T,z as a}from"./chunk-R7KBA722.js";var h=[{name:"General",icon:"pi pi-wallet"},{name:"Cash",icon:"pi pi-money-bill"},{name:"Bank Account",icon:"pi pi-building-columns"},{name:"Card",icon:"pi pi-id-card"},{name:"Savings",icon:"pi pi-heart"}];var N="#2dd4bf";var S=class o{id;uid;name;type;balance;currency;color;showInStats;constructor(t,i={}){let{id:r,name:e="New Account",type:n=h[0],balance:m=0,currency:d=u[0],color:A=N,showInStats:s=!0}=i;this.id=r,this.uid=t,this.name=e,this.type=n,this.balance=m,this.currency=d,this.color=A,this.showInStats=s}static fromDto(t,i){let s=t,{uid:r,type:e,currency:n}=s,m=C(s,["uid","type","currency"]),d=u.find(f=>f.short===n)??u[0],A=h.find(f=>f.name===e)??h[0];return new o(r,E({id:i,type:A,currency:d},m))}validate=()=>{let t={};return(!this.name||!this.name?.trim().length)&&(t.name="Name is required"),this.type||(t.type="Type is required"),(this.balance===null||this.balance===void 0)&&(t.balance="Balance is required"),this.currency||(t.currency="Currency is required"),{isValid:!Object.values(t).length,errors:t}};toDto=()=>({uid:this.uid,name:this.name,type:this.type.name,balance:this.balance,currency:this.currency.short,color:this.color,showInStats:this.showInStats})};var w=class o{constructor(t,i,r){this.auth=t;this.firestore=i;this.notificationService=r;this.checkUserAndLoadAccounts()}_accounts=new y([]);accounts$=this._accounts.asObservable();subSink=[];checkUserAndLoadAccounts=()=>{this.auth.onAuthStateChanged(t=>t&&this.loadAccounts())};loadAccounts=()=>c(this,null,function*(){let t=this.auth.currentUser;if(!t)return;let r=(yield v(L(l(this.firestore,"accounts"),O("uid","==",t.uid)))).docs.map(e=>{let n=e.data();return S.fromDto(n,e.id)});this._accounts.next(r)});createAccount=t=>c(this,null,function*(){try{if(!this.auth.currentUser)throw Error("User not logged in!");let r=yield D(l(this.firestore,"accounts"),t.toDto());return t.id=r.id,this._accounts.next([t,...this._accounts.value]),this.notificationService.success("ACCOUNTS.SUCCESSFUL_TITLE","ACCOUNTS.CREATE_SUCCESSFUL_MESSAGE"),t}catch(i){console.error("Failed to create account:",i),this.notificationService.error("ACCOUNTS.FAILED_TITLE","ACCOUNTS.CREATE_FAILED_MESSAGE");return}});editAccount=t=>c(this,null,function*(){try{if(!t.id)throw Error("ID is required to update");yield g(p(this.firestore,"accounts",t.id),t.toDto()),this.notificationService.success("ACCOUNTS.SUCCESSFUL_TITLE","ACCOUNTS.UPDATE_SUCCESSFUL_MESSAGE");let i=this._accounts.value.map(r=>r.id===t.id?t:r);return this._accounts.next(i),t}catch{this.notificationService.error("ACCOUNTS.FAILED_TITLE","ACCOUNTS.UPDATE_FAILED_MESSAGE");return}});deleteAccount=t=>c(this,null,function*(){try{yield _(p(this.firestore,"accounts",t)),this.notificationService.success("ACCOUNTS.SUCCESSFUL_TITLE","ACCOUNTS.DELETE_SUCCESSFUL_MESSAGE");let i=this._accounts.value.filter(r=>r.id!==t);return this._accounts.next(i),!0}catch{return this.notificationService.error("ACCOUNTS.FAILED_TITLE","ACCOUNTS.DELETE_FAILED_MESSAGE"),!1}});ngOnDestroy=()=>{this.subSink.forEach(t=>t.unsubscribe())};static \u0275fac=function(i){return new(i||o)(a(U),a(b),a(I))};static \u0275prov=T({token:o,factory:o.\u0275fac})};export{h as a,S as b,w as c};
